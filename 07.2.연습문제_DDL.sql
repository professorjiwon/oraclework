/*
07.DDL 실습문제
도서관리 프로그램을 만들기 위한 테이블들 만들기
이때, 제약조건에 이름을 부여할 것.
       각 컬럼에 주석달기

1. 출판사들에 대한 데이터를 담기위한 출판사 테이블(TB_PUBLISHER)
   컬럼  :  PUB_NO(출판사번호) NUMBER -- 기본키(PUBLISHER_PK) 
	PUB_NAME(출판사명) VARCHAR2(50) -- NOT NULL(PUBLISHER_NN)
	PHONE(출판사전화번호) VARCHAR2(13) - 제약조건 없음
*/   
CREATE TABLE TB_PUBLISHER (
    PUB_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY,
    PUB_NAME VARCHAR (50) CONSTRAINT PUBLISHER_NN NOT NULL,
    PHONE VARCHAR (20)
);

COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사 번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사';

-- 3개 정도의 샘플 데이터 추가하기
INSERT INTO TB_PUBLISHER VALUES (1, '강아지', NULL);
INSERT INTO TB_PUBLISHER VALUES (2, '고양이', '010-1111-1111');
INSERT INTO TB_PUBLISHER VALUES (3, '호랑이', NULL);

------------------------------------------------------------------------------------------------------------
/*
2. 도서들에 대한 데이터를 담기위한 도서 테이블(TB_BOOK)
   컬럼  :  BK_NO (도서번호) NUMBER -- 기본키(BOOK_PK)
	BK_TITLE (도서명) VARCHAR2(50) -- NOT NULL(BOOK_NN_TITLE)
	BK_AUTHOR(저자명) VARCHAR2(20) -- NOT NULL(BOOK_NN_AUTHOR)
	BK_PRICE(가격) NUMBER
	BK_PUB_NO(출판사번호) NUMBER -- 외래키(BOOK_FK) (TB_PUBLISHER 테이블을 참조하도록)
			         이때 참조하고 있는 부모데이터 삭제 시 자식 데이터도 삭제 되도록 옵션 지정
*/

CREATE TABLE TB_BOOK (
    BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY,
    BK_TITLE VARCHAR (50) CONSTRAINT BOOK_NN_TITLE NOT NULL,
    BK_AUTHOR VARCHAR (20) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
    BK_PRICE NUMBER,
    BK_PUB_NO NUMBER CONSTRAINT BOOK_FK REFERENCES TB_PUBLISHER ON DELETE CASCADE
);

COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서 번호';
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '작가';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사 번호';

-- 5개 정도의 샘플 데이터 추가하기
INSERT INTO TB_BOOK VALUES (1, '하늘', '강아지', 10000, 1);
INSERT INTO TB_BOOK VALUES (2, '땅', '고양이', 20000, 2);
INSERT INTO TB_BOOK VALUES (3, '바다', '호랑아', 40000, 1);
INSERT INTO TB_BOOK VALUES (4, '산', '개구리', 15000, 3);
INSERT INTO TB_BOOK VALUES (5, '해변', '참새', 25000, 2);
------------------------------------------------------------------------------------------------------------
/* 
3. 회원에 대한 데이터를 담기위한 회원 테이블 (TB_MEMBER)
   컬럼명 : MEMBER_NO(회원번호) NUMBER -- 기본키(MEMBER_PK)
   MEMBER_ID(아이디) VARCHAR2(30) -- 중복금지(MEMBER_UQ)
   MEMBER_PWD(비밀번호)  VARCHAR2(30) -- NOT NULL(MEMBER_NN_PWD)
   MEMBER_NAME(회원명) VARCHAR2(20) -- NOT NULL(MEMBER_NN_NAME)
   GENDER(성별)  CHAR(1)-- 'M' 또는 'F'로 입력되도록 제한(MEMBER_CK_GEN)
   ADDRESS(주소) VARCHAR2(70)
   PHONE(연락처) VARCHAR2(13)
   STATUS(탈퇴여부) CHAR(1) - 기본값으로 'N' 으로 지정, 그리고 'Y' 혹은 'N'으로만 입력되도록 제약조건(MEMBER_CK_STA)
   ENROLL_DATE(가입일) DATE -- 기본값으로 SYSDATE, NOT NULL 제약조건(MEMBER_NN_EN)
*/ 
CREATE TABLE TB_MEMBER (
    MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
    MEMBER_ID VARCHAR (30) CONSTRAINT MEMBER_UQ UNIQUE,
    MEMBER_PWD VARCHAR (30) CONSTRAINT MEMBER_NN_PWD NOT NULL,
    MEMBER_NAME VARCHAR (20) CONSTRAINT MEMBER_NN_NAME NOT NULL,
    GENDER CHAR (1) CONSTRAINT MEMBER_CK_GEN CHECK (GENDER IN ('M', 'F')),
    ADDRESS VARCHAR (70),
    PHONE VARCHAR (20),
    STATUS CHAR (1) DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK (STATUS IN ('Y', 'N')),
    ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEMBER_NN_EN NOT NULL
);

COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '회원 아이디';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '회원 비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원명';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴여부';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';

-- 5개 정도의 샘플 데이터 추가하기
INSERT INTO TB_MEMBER VALUES (1, 'user01', 'pass01', '강아지', 'M', '서울시', '010-1111-1111', 'N', '20/11/23');
INSERT INTO TB_MEMBER VALUES (2, 'user02', 'pass02', '고양이', 'F', '강원도', NULL, 'N', DEFAULT);
INSERT INTO TB_MEMBER VALUES (3, 'user03', 'pass03', '호랑이', 'F', '경기도', '010-2222-2222', 'N', '22/1/13');
INSERT INTO TB_MEMBER VALUES (4, 'user04', 'pass04', '개구리', 'M', '경상남도', NULL, 'N', DEFAULT);
INSERT INTO TB_MEMBER VALUES (5, 'user05', 'pass05', '참새', 'M', '서울시', '010-3333-3333', 'Y', '21/10/3');

------------------------------------------------------------------------------------------------------------
/*
4. 어떤 회원이 어떤 도서를 대여했는지에 대한 대여목록 테이블(TB_RENT)
   컬럼  :  RENT_NO(대여번호) NUMBER -- 기본키(RENT_PK)
	RENT_MEM_NO(대여회원번호) NUMBER -- 외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록
			이때 부모 데이터 삭제시 자식 데이터 값이 NULL이 되도록 옵션 설정
	RENT_BOOK_NO(대여도서번호) NUMBER -- 외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록
			이때 부모 데이터 삭제시 자식 데이터 값이 NULL값이 되도록 옵션 설정
	RENT_DATE(대여일) DATE -- 기본값 SYSDATE
*/

CREATE TABLE TB_RENT (
    RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
    RENT_MEM_NO NUMBER CONSTRAINT RENT_FK_MEM REFERENCES TB_MEMBER ON DELETE SET NULL,
    RENT_BOOK_NO NUMBER CONSTRAINT RENT_FK_BOOK  REFERENCES TB_BOOK ON DELETE SET NULL,
    RENT_DATE DATE DEFAULT SYSDATE
);

COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여회원번호';
COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여도서번호';
COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일';

-- 3개 정도 샘플데이터 추가하기
INSERT INTO TB_RENT VALUES (1, 2, 1, '20/11/21');
INSERT INTO TB_RENT VALUES (2, 3, 5, '21/2/11');
INSERT INTO TB_RENT VALUES (3, 2, 2, '20/4/5');
